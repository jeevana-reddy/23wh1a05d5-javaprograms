package javaprograms;
class DoublyLinkedList {
    // Node class for doubly linked list
    private class Node {
        int data;
        Node prev;
        Node next;

        Node(int data) {
            this.data = data;
            this.prev = null;
            this.next = null;
        }
    }

    private Node head;

    // Insert a new node at the end of the list
    public void insert(int data) {
        Node newNode = new Node(data);
        if (head == null) {
            head = newNode;
        } else {
            Node temp = head;
            while (temp.next != null) {
                temp = temp.next;
            }
            temp.next = newNode;
            newNode.prev = temp;
        }
    }

    // Delete a node with a given value
    public void delete(int data) {
        if (head == null) {
            System.out.println("List is empty.");
            return;
        }

        Node temp = head;

        // Traverse to find the node to delete
        while (temp != null && temp.data != data) {
            temp = temp.next;
        }

        // Node with the given data is not found
        if (temp == null) {
            System.out.println("Element " + data + " not found in the list.");
            return;
        }

        // If the node to be deleted is the head node
        if (temp == head) {
            head = head.next;
            if (head != null) {
                head.prev = null;
            }
        } else {
            // Update the links of the previous and next nodes
            if (temp.next != null) {
                temp.next.prev = temp.prev;
            }
            if (temp.prev != null) {
                temp.prev.next = temp.next;
            }
        }

        System.out.println("Element " + data + " deleted from the list.");
    }

    // Display the contents of the list
    public void display() {
        if (head == null) {
            System.out.println("List is empty.");
            return;
        }

        Node temp = head;
        System.out.print("List contents: ");
        while (temp != null) {
            System.out.print(temp.data + " ");
            temp = temp.next;
        }
        System.out.println();
        }
}

public class Main {
    public static void main(String[] args) {
        DoublyLinkedList list = new DoublyLinkedList();

        // Insert elements into the list
        list.insert(10);
        list.insert(20);
        list.insert(30);
        list.insert(40);

        // Display list contents
        System.out.println("Original list:");
        list.display();

        // Delete an element
        list.delete(20);

        // Display list contents after deletion
        System.out.println("List after deletion:");
        list.display();
    }
}
